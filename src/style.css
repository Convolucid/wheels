:root {
    /* Colors */
    --color-neutral: rgb(249, 246, 250);
    --color-primary: rgb(122, 0, 146);
    --color-secondary: rgb(255, 255, 96);
    --color-accent-inverse: rgb(255, 254, 230);

    --typeColor-primary: rgb(81, 42, 94);
    --typeColor-inverse: rgb(253, 253, 194);

    /* Fonts */
    --sansSerif: Verdana, Arial, sans-serif;
    --serif: "Georgia", Times, serif;

    /* Layers */
    --z-bottom: -2;
    --z-background: -1;
    --z-overlay: 1;
    --z-top: 2;
}


/* Box-sizing on all elements and pseudo-elements */
*, *::before, *::after {
    box-sizing: border-box;
}

/* Default margins set to 0 on elements */
body, h1, h2, h3, h4, p, figure, blockquote, dl, dd {
    margin: 0;
}

/* Smooth scrolling except when searching in-page */
html:focus-within {
    scroll-behavior: smooth;
}

/* This change is specifically to reset list-style on explicitly defined lists.  Removing list-style on non-explicit lists can result in accessibility issues for screen readers */
ul[role='list'], ol[role='list'] {
    list-style: none;
}

/* Link underlines for non-classed 'a' elements will not cross over glyph ascenders and descenders */
a:not([class]) {
    text-decoration-skip-ink: auto;
}

/* Block eliminates the empty space at the bottom of an image, and max-width prevents image from spilling out of bounds */
img, picture {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input, button, textarea, select {
    font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
    
    html:focus-within {
        scroll-behavior: auto;
    }

    *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* Body, container, and main canvas elements.  Set default body height to fill viewport, and prevent loading issues that can occur with text-rendering: optimizeLegibility.  Increased line-height helps readability. */
body {
    min-height: 100vh;

    background-color: var(--color-neutral);
    color: var(--typeColor-primary);

    line-height: 1.5;
    text-rendering: optimizeSpeed;
}

/* Header and navigation */
header {
    padding: 10px;

    background-color: var(--color-primary);
    color: var(--typeColor-inverse);
}

.nav {
    display: flex;
    align-items: center;
}

.nav-logo {
    height: 2rem;
}

.nav-title {
    flex: 2 0 auto;
    padding-left: 5px;
    font-family: var(--serif);
}

.nav-list {
    display: flex;
    margin: 0;
}

/* Nav-list-collapse is mobile-first perspective, where it's hidden. */
.nav-list-collapse {
    display: none;
}

/* Nav-list-overlap is mobile-first, where the menu expands to fill the screen */
.nav-list-overlay {
    position: fixed;
    display: block;
    z-index: var(--z-overlay);
    top: 0;
    left: 0;
    right: 0;

    margin: 3rem 10px;
    padding: 0;

    background-color: var(--color-neutral);
    color: var(--typeColor-primary);
}

/* nav-list-expand is standard top menu */
.nav-list li { 
    text-transform: uppercase;
    font-family: var(--sansSerif);
    font-size: 0.9rem;

    cursor: pointer;
}

.nav-list-expand li {
    padding: 20px 0px;
    text-align: center;
}



.nav-list-button {
    margin-left: auto;
    padding: 0;
    border: 0;

    background-color: var(--color-primary);
}

.nav-list-button svg {
    height: 2.25rem;
}


/* Main content.  Absolute and relative sizing allows z-index like behavior, and for the inline svg to act as a background image.  Using "vw" as a sizing element creates responsiveness that matches the responsiveness of the svgs.  */
p {
    padding-top: 1rem;
}


/* Hero section */
.main-hero {
    margin-top: -15px;
}

.main-hero svg {
    position: absolute;
}

.main-hero-text {
    position: relative;
    padding: 15vw 5vw 5vw;

    text-align: right;
    font-family: var(--serif);
    font-size: 7vw;
}

/* Content section */
.main-content svg {
    position: absolute;
}

.main-article {
    position: relative;
    padding: 25vw 5vw;

    font-family: var(--sansSerif);
}

#home-article {
    display: block;
}

#history-article {
    display: none;
}

#process-article {
    display: none;
}


/* Icon container and icons */
.main-iconContainer {
    position: relative;
    display: flex;
    flex-wrap: wrap;
}

.main-icon {
    height: 20vw;
}




@media (min-width: 768px) {
    
    .nav-list-button {
        display: none;
    }

    .nav-list {
        display: flex;
    }

    .nav-list-expand {
        position: relative;
        z-index: var(--z-default);
        display: flex;

        margin: 0;
    
        background-color: var(--color-primary);
        color: var(--typeColor-inverse);
    }

    .nav-list li {
        padding: 0 2vw;
    }

    .nav-list-expand li {
        padding: 0 2vw;
    }
}